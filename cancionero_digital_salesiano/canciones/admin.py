from django.contrib import admin
from .models import TiempoLiturgico, Cancion, LineaCancion, Favorito, ListaPersonal, ListaCancion

# ============================
# ‚öôÔ∏è CONFIGURACI√ìN DEL ADMINISTRADOR
# ============================


# ----------------------------
# üéµ Canci√≥n y l√≠neas asociadas
# ----------------------------

class LineaCancionInline(admin.TabularInline):
    """
    Permite editar las l√≠neas de una canci√≥n directamente desde la p√°gina de administraci√≥n de la canci√≥n.
    Se muestra como un formulario en l√≠nea (TabularInline).
    """
    model = LineaCancion
    extra = 1  # N√∫mero de formularios en blanco adicionales


@admin.register(Cancion)
class CancionAdmin(admin.ModelAdmin):
    """
    Configura la interfaz de administraci√≥n para el modelo Cancion.
    Incluye las l√≠neas de canci√≥n como formularios en l√≠nea.
    """
    inlines = [LineaCancionInline]
    list_display = ('titulo', 'id_tiempo')  # tuple con campos v√°lidos
    search_fields = ['titulo']  # lista aunque sea un solo campo


# ----------------------------
# ‚õ™ Tiempos Lit√∫rgicos
# ----------------------------

@admin.register(TiempoLiturgico)
class TiempoLiturgicoAdmin(admin.ModelAdmin):
    """
    Administra los objetos de Tiempo Lit√∫rgico desde el panel de administraci√≥n.
    Permite b√∫squedas por nombre.
    """
    list_display = ['nombre_tiempo']  # lista para un solo campo
    search_fields = ['nombre_tiempo']  # lista para un solo campo


# ----------------------------
# ‚≠ê Favoritos
# ----------------------------

@admin.register(Favorito)
class FavoritoAdmin(admin.ModelAdmin):
    """
    Gesti√≥n de favoritos en el panel de administraci√≥n.
    Muestra el usuario y la canci√≥n asociada.
    """
    list_display = ('usuario', 'cancion')
    search_fields = ('usuario__username', 'cancion__titulo')


# ----------------------------
# üìú Listas personales de usuarios
# ----------------------------

@admin.register(ListaPersonal)
class ListaPersonalAdmin(admin.ModelAdmin):
    """
    Permite la administraci√≥n de listas personales creadas por los usuarios.
    Se puede buscar por nombre de lista o usuario.
    """
    list_display = ('nombre_lista', 'usuario')
    search_fields = ('nombre_lista', 'usuario__username')


# ----------------------------
# üîó Asociaci√≥n entre canciones y listas
# ----------------------------

@admin.register(ListaCancion)
class ListaCancionAdmin(admin.ModelAdmin):
    """
    Administra las relaciones entre canciones y listas en el panel de administraci√≥n.
    √ötil para ver qu√© canciones pertenecen a qu√© listas.
    """
    list_display = ('lista', 'cancion')
    search_fields = ('lista__nombre_lista', 'cancion__titulo')
